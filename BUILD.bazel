load("@com_github_grpc_grpc//bazel:grpc_build_system.bzl", "grpc_proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load("@io_grpc_grpc_java//:java_grpc_library.bzl", "java_grpc_library")
load("@io_bazel_rules_closure//closure:defs.bzl", "closure_js_binary", "closure_js_library", "closure_js_test", "closure_proto_library")
load("@build_bazel_rules_nodejs//:defs.bzl", "jasmine_node_test", "nodejs_binary")
load("@io_bazel_rules_rust//proto:proto.bzl", "rust_grpc_library")
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_binary")
load("@io_bazel_rules_rust//proto:toolchain.bzl", RUST_GRPC_COMPILE_DEPS = "GRPC_COMPILE_DEPS")
load(":lizard.bzl", "bask")
#bask()

proto_library(
    name = "service_proto",
    srcs = ["service.proto"],
    deps = [
        "@com_google_protobuf//:any_proto",
    ],
)

closure_js_library(
    name = "kim_lib",
    srcs = ["kim.js"],
)

closure_js_binary(
    name = "kim_bin",
    language = "ECMASCRIPT3",
    output_wrapper = "(function(){%output%}).call(this);",
    deps = [":kim_lib"],
)

closure_proto_library(
    name = "closure_service_proto",
    deps = [":service_proto"],
)

grpc_proto_library(
    name = "service_grpc_proto",
    srcs = ["service.proto"],
)

java_proto_library(
    name = "java_service_proto",
    deps = [":service_proto"],
)

java_grpc_library(
    name = "java_service_grpc",
    srcs = [":service_proto"],
    deps = [":java_service_proto"],
)

cc_binary(
    name = "test",
    srcs = ["test.cpp"],
    deps = [
        ":service_grpc_proto",
        "@com_github_grpc_grpc//:grpc++",
    ],
)

cc_binary(
    name = "bidi",
    srcs = ["bidi.cpp"],
    deps = [
        ":service_grpc_proto",
        "@com_github_grpc_grpc//:grpc++",
    ],
)

py_binary(
    name = "shed",
    srcs = ["shed.py"],
)

sh_binary(
    name = "pike",
    srcs = ["pike.sh"],
)

#filegroup(
#    name = "noodle_program",
#    srcs = [ "noodle.js" ]
#)

#jasmine_node_test(
#    name = "noodle",
#    data = [ "noodle.js", ":noodle_program" ],
#    args = ["--node_options=--expose-gc"],
#    entry_point = "bin/noodle.js"
#)

go_binary(
    name = "ken",
    srcs = ["ken.go"],
    deps = [
        ":go_grpc",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
    ],
)

go_proto_library(
    name = "go_grpc",
    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
    importpath = "github.com/malkia/rpcing",
    proto = ":service_proto",
    #protos = [ ":service_proto" ],
)

#bask()

rust_grpc_library(
    name = "rust_service_proto",
    deps = [":service_proto"],
)

rust_binary(
    name = "hook",
    srcs = ["hook.rs"],
    deps = [":rust_service_proto"] + RUST_GRPC_COMPILE_DEPS,
)
